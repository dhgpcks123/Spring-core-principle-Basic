# 의존관계 자동 주입

    다양한 의존관계 주입 방법

    - 생성자 주입
    - 수정자 주입(setter 주입)
    - 필드 주입
    - 일반 메서드 주입

생성자 주입
    - 이름 그대로 생성자를 통해서 의존 관계를 주입 받는 방법이다.
    - 지금까지 우리가 진행했던 방법이 바로 생성자 주입이다.
    - 특징
        - 생성자 호출시점에 딱 1번만 호출되는 것이 보장된다. -> 처음 셋팅하고 이후에 바꾸는 거 막을 수 있음.
        - 불편, 필수 의존관계에 사용

    중요!!!!! 생성자가 딱 1개만 있으면 @Autowired 생략해도 된다.
    public OrderServiceImpl(){
    }
    @Autowired //지금은 생성자2개니까 생략할 수 없음.
    public OrderServiceImple(MemberRepository memberRepository, DiscountPolicy discountPolicy){
        this.~
        this.~
    }


수정자 주입(setter 주입)
    setter라 불리는 필드의 값을 변경하는 수정자 메서드를 통해서 의존관계를 주입하는 방법이다.
        private MemberRepository memberRepository; //final붙였다? 필수! 값이 꼭 있어야 한다. 지정한 거라고 볼 수 있음.
        private  DiscountPolicy discountPolicy;

        @Autowired
        public void setMemberRepository(MemberRepository memberRepository){
            this.memberRepository = memberRepository;
        }
        @Autowired
        public void setDiscountPolicy(DiscountPolicy discountPolicy){
            this.discountPolicy = discountPolicy;
        }

        생성자-> setter 주입(수정자 주입)
        - 선택, 변경 가능성 있는 의존관계에 사용.
        - 중간에 배역바꾸고 싶어. 외부에서 강제로 호출. 그럴 일은 거의 없더라....
        - 자바빈 프로퍼티 규약의 수정자 메서드 방식을 사용하는 방법이다.

        참고 : @Autowired 의 기본 동작은 주입할 대상이 없으면 오류가 발생한다.
        주입할 대상이 없어도 동작하게 하려면 @Autowired(required =false)로 지정하면 된다.

        참고 : 자바빈 프로퍼티, 자바에서는 과거부터 필드의 값을 직접 변경하지 않고, setXxx, getXxx라는
        메서드를 통해서 값을 읽거나 수정하는 규칙을 만들었는데, 그것ㅅ이 자바빈 프로퍼티 규약이다.

    필드 주입(쓰지마)
        이름 그대로 필드에 바로 주입하는 방법
          @Autowired private MemberRepository memberRepository;
          @Autowired private  DiscountPolicy discountPolicy;

        특징
            -코드간결해서 많은 개발자들을 유혹하지만.... 외부에서 변경이 불가능해서 테스트 하기 힘들다는 치명적인 단점이 있다.
            -DI 프레임워크가 없으면 아무것도 할 수가 없다.
            -사용하지 말자!
                - 애플리케이션 실제 코드왁 관계 없는 테스트 코드
                - 스프링 설정을 목적으로 하는 @Configuration 같은 특별한 곳에서 씀.

    일반 메서드 주입
        -일반 메서드를 통해서 주입 받을 수 있다.
            - 한번에 여러 개 받기 가능
            - 일반적으로 잘 사용 안함.
        참고 : 의존관계 자동 주입은 스프링 컨테이너가 관리하는 스프링 빈이어야 동작한다.
        스프링 빈이 아닌 Member같은 클래스에서 @Autowired코드를 적용해도 아무 기능도 동작하지 않는다.